openapi: 3.0.2
info:
  title: API
  version: 1.0.0
servers:
  - url: /v1/api
security:
  - bearer-atk-token: []
tags:
  - name: Projects
  - name: Ideas
  - name: Images
paths:
  /images/{imageName}:
    get:
      tags:
        - Images
      operationId: getImage
      description: 'Get specific image'
      parameters:
        - in: path
          name: imageName
          schema:
            type: string
          required: true
          description: File name ex. image.jpg
      responses:
        '200':
          description: Get specific image
          content:
            application/json:
              schema:
                type: string
                format: byte

  /projects:
    get:
      tags:
        - Projects
      operationId: getProjects
      description: 'Get all users projects ordered by most recent'
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
    post:
      tags:
        - Projects
      operationId: addProject
      description: 'Add project by user'
      parameters:
        - in: header
          name: X-User-ID
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Body of project to be created
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                ideaImage:
                  type: string
                  format: binary
                solutionImage:
                  type: string
                  format: binary
              required:
                - data
                - ideaImage
                - solutionImage
      responses:
        '204':
          description: Returned when project creation operation is successful

  /ideas:
    get:
      tags:
        - Ideas
      operationId: getIdeas
      description: 'Get all users ideas'
      responses:
        '200':
          description: List of ideas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdeaDto'
    post:
      tags:
        - Ideas
      operationId: addIdea
      description: 'Get all users ideas'
      parameters:
        - in: header
          name: X-User-ID
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Body of project to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdeaRequest'
      responses:
        '204':
          description: Returned when idea creation operation is successful

  /ideas/{ideaId}:
    get:
      tags:
        - Ideas
      operationId: getIdeaDetails
      description: 'Get specific idea details'
      parameters:
        - in: path
          name: ideaId
          schema:
            type: integer
            format: int64
          required: true
          description: Numeric ID of the idea to get
      responses:
        '200':
          description: Idea details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdeaDetailsDto'

  /ideas/{ideaId}/comments:
      post:
        tags:
          - Ideas
        operationId: addCommentForIdea
        description: 'Add comment for specific idea'
        parameters:
          - in: header
            name: X-User-ID
            schema:
              type: integer
              format: int64
            required: true
          - in: path
            name: ideaId
            schema:
              type: integer
              format: int64
            required: true
            description: Numeric ID of the idea to comment
        requestBody:
          description: Body of comment to be created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCommentRequest'
        responses:
          '204':
            description: Comment created
components:
  schemas:
    CreateProjectRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
      required:
        - title
        - description
    CreateIdeaRequest:
      type: object
      properties:
        image:
          type: string
        additionalInfo:
          type: string
        tags:
          type: array
          items:
            type: string
      required:
        - image
        - additionalInfo
    CreateCommentRequest:
      type: object
      properties:
        content:
          type: string
        image:
          type: string
      required:
        - content
    ProjectDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ownerId:
          type: integer
          format: int64
        title:
          type: string
        ideaImage:
          type: string
        solutionImage:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        points:
          type: integer
        creationTimestamp:
          type: integer
          format: int64
    IdeaDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        image:
          type: string
        owner:
          $ref: '#/components/schemas/OwnerDto'
        points:
          type: integer
        creationTimestamp:
          type: integer
          format: int64
    IdeaDetailsDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          $ref: '#/components/schemas/OwnerDto'
        description:
          type: string
        image:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
        tags:
          type: array
          items:
            type: string
        points:
          type: integer
        creationTimestamp:
          type: integer
          format: int64
    CommentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          $ref: '#/components/schemas/OwnerDto'
        image:
          type: string
        content:
          type: string
    OwnerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string